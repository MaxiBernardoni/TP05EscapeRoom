@{
    ViewData["Title"] = "Tubería Laberinto";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var gano = ViewBag.GanoLaberinto as bool? ?? false;
}
<div class="tut-laberinto-container" style="max-width:700px;margin:40px auto;">
    <h2 style="text-align:center;">Tubería Laberinto</h2>
    <div id="tutorial-laberinto" style="display:@(gano ? "none" : "block");">
        <div style="display:flex;gap:24px;justify-content:center;margin:32px 0;">
            <div style="background:#111;border:2px solid #00ff99;border-radius:12px;padding:24px 18px;width:180px;text-align:center;">
                <div style="font-size:2.5em;font-weight:bold;">1</div>
                <div style="margin-top:10px;">Mové el mouse para avanzar por el laberinto.</div>
            </div>
            <div style="background:#111;border:2px solid #00ff99;border-radius:12px;padding:24px 18px;width:180px;text-align:center;">
                <div style="font-size:2.5em;font-weight:bold;">2</div>
                <div style="margin-top:10px;">No te salgas de los bordes. Si salís, empezás de nuevo.</div>
            </div>
            <div style="background:#111;border:2px solid #00ff99;border-radius:12px;padding:24px 18px;width:180px;text-align:center;">
                <div style="font-size:2.5em;font-weight:bold;">3</div>
                <div style="margin-top:10px;">Llegá al final para acceder al edificio.</div>
            </div>
        </div>
        <div style="text-align:center;margin:32px 0;">
            <button onclick="iniciarLaberinto()" class="btn btn-primary" style="font-size:1.2em;">Jugar laberinto</button>
        </div>
    </div>
    <div id="laberinto-juego" style="display:@(gano ? "block" : "none");text-align:center;position:relative;">
        <div id="play-overlay-lab" style="display:block;position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,0.0);z-index:10;align-items:center;justify-content:center;pointer-events:none;">
            <button id="btn-play-lab" style="position:absolute;left:7vw;top:200px;transform:translate(-50%,-50%);background:none;color:#fff;font-size:2.5em;padding:0;border:none;border-radius:50%;box-shadow:none;font-weight:bold;cursor:pointer;pointer-events:auto;">▶</button>
        </div>
        <canvas id="laberinto-canvas" width="1536" height="400" style="background:#222;display:block;margin:0 auto;border:3px solid #00ff99;border-radius:12px;width:80vw;max-width:1536px;"></canvas>
        <div id="laberinto-estado" style="margin:20px 0;color:#fff;font-size:1.2em;"></div>
        <div id="laberinto-nivel" style="margin:10px 0;color:#00ff99;font-size:1.1em;font-weight:bold;"></div>
        <button id="btn-continuar-laberinto" class="btn btn-success" style="display:none;" onclick="window.location.href='/Home/SeleccionCaminoEdificio'">Continuar</button>
    </div>
</div>
<script>
let jugando = false;
let gano = false;
let nivelActual = 1;
let totalNiveles = 3;
let startedLab = false;

// Nuevo ancho
const ANCHO = 0.8 * window.innerWidth;
const ANCHO_CANVAS = Math.min(1536, Math.max(900, ANCHO));
const ALTO_CANVAS = 400;

// Configuración de niveles
const nivelesLaberinto = [
    // Nivel 1 - Fácil
    {
        start: {x: 0.08*ANCHO_CANVAS, y: 200},
        end: {x: 0.92*ANCHO_CANVAS, y: 200, r: 20},
        path: [
            {x:0.08*ANCHO_CANVAS,y:150,w:0.84*ANCHO_CANVAS,h:100},
            {x:0.08*ANCHO_CANVAS,y:50,w:0.04*ANCHO_CANVAS,h:250},
            {x:0.88*ANCHO_CANVAS,y:50,w:0.04*ANCHO_CANVAS,h:250},
            {x:0.32*ANCHO_CANVAS,y:50,w:0.36*ANCHO_CANVAS,h:50},
            {x:0.32*ANCHO_CANVAS,y:300,w:0.36*ANCHO_CANVAS,h:50}
        ],
        muros: [
            {x:0.20*ANCHO_CANVAS,y:100,w:0.60*ANCHO_CANVAS,h:20},
            {x:0.20*ANCHO_CANVAS,y:280,w:0.60*ANCHO_CANVAS,h:20}
        ]
    },
    // Nivel 2 - Medio (invertido)
    {
        start: {x: 0.92*ANCHO_CANVAS, y: 200},
        end: {x: 0.08*ANCHO_CANVAS, y: 200, r: 20},
        path: [
            {x:0.08*ANCHO_CANVAS,y:150,w:0.84*ANCHO_CANVAS,h:100},
            {x:0.08*ANCHO_CANVAS,y:50,w:0.04*ANCHO_CANVAS,h:250},
            {x:0.88*ANCHO_CANVAS,y:50,w:0.04*ANCHO_CANVAS,h:250},
            {x:0.20*ANCHO_CANVAS,y:50,w:0.60*ANCHO_CANVAS,h:50},
            {x:0.20*ANCHO_CANVAS,y:300,w:0.60*ANCHO_CANVAS,h:50}
        ],
        muros: [
            {x:0.32*ANCHO_CANVAS,y:100,w:0.36*ANCHO_CANVAS,h:20},
            {x:0.32*ANCHO_CANVAS,y:280,w:0.36*ANCHO_CANVAS,h:20},
            {x:0.48*ANCHO_CANVAS,y:150,w:0.02*ANCHO_CANVAS,h:30},
            {x:0.48*ANCHO_CANVAS,y:220,w:0.02*ANCHO_CANVAS,h:30}
        ]
    },
    // Nivel 3 - Difícil (invertido)
    {
        start: {x: 0.08*ANCHO_CANVAS, y: 200},
        end: {x: 0.92*ANCHO_CANVAS, y: 200, r: 20},
        path: [
            {x:0.08*ANCHO_CANVAS,y:150,w:0.84*ANCHO_CANVAS,h:100},
            {x:0.08*ANCHO_CANVAS,y:50,w:0.04*ANCHO_CANVAS,h:250},
            {x:0.88*ANCHO_CANVAS,y:50,w:0.04*ANCHO_CANVAS,h:250},
            {x:0.20*ANCHO_CANVAS,y:50,w:0.60*ANCHO_CANVAS,h:50},
            {x:0.20*ANCHO_CANVAS,y:300,w:0.60*ANCHO_CANVAS,h:50}
        ],
        muros: [
            {x:0.13*ANCHO_CANVAS,y:80,w:0.19*ANCHO_CANVAS,h:20},
            {x:0.68*ANCHO_CANVAS,y:120,w:0.19*ANCHO_CANVAS,h:20},
            {x:0.13*ANCHO_CANVAS,y:300,w:0.19*ANCHO_CANVAS,h:20},
            {x:0.68*ANCHO_CANVAS,y:260,w:0.19*ANCHO_CANVAS,h:20},
            {x:0.42*ANCHO_CANVAS,y:160,w:0.02*ANCHO_CANVAS,h:80},
            {x:0.32*ANCHO_CANVAS,y:200,w:0.16*ANCHO_CANVAS,h:20}
        ]
    }
];

let mouse = {x: 0, y: 0};
let nivelActualConfig = nivelesLaberinto[0];

function iniciarLaberinto() {
    document.getElementById('tutorial-laberinto').style.display = 'none';
    document.getElementById('laberinto-juego').style.display = 'block';
    // Mostrar overlay de play solo en el primer nivel
    document.getElementById('play-overlay-lab').style.display = 'flex';
    document.getElementById('btn-play-lab').onclick = function() {
        document.getElementById('play-overlay-lab').style.display = 'none';
        jugarLaberinto();
    };
}

function jugarLaberinto() {
    jugando = true;
    gano = false;
    nivelActual = 1;
    nivelActualConfig = nivelesLaberinto[0];
    
    let canvas = document.getElementById('laberinto-canvas');
    let ctx = canvas.getContext('2d');
    let estado = document.getElementById('laberinto-estado');
    let nivelDisplay = document.getElementById('laberinto-nivel');
    
    estado.textContent = 'Mové el mouse desde el círculo blanco hasta el amarillo sin tocar los bordes.';
    nivelDisplay.textContent = `Nivel ${nivelActual} de ${totalNiveles}`;
    
    // Posición inicial
    mouse.x = nivelActualConfig.start.x;
    mouse.y = nivelActualConfig.start.y;
    
    function draw() {
        ctx.clearRect(0,0,ANCHO_CANVAS,ALTO_CANVAS);
        
        // Dibuja el camino válido
        ctx.fillStyle = '#333';
        for(let p of nivelActualConfig.path) {
            ctx.fillRect(p.x, p.y, p.w, p.h);
        }
        
        // Dibuja los muros
        ctx.fillStyle = '#666';
        for(let muro of nivelActualConfig.muros) {
            ctx.fillRect(muro.x, muro.y, muro.w, muro.h);
        }
        
        // Dibuja inicio y fin
        ctx.beginPath();
        ctx.arc(nivelActualConfig.start.x, nivelActualConfig.start.y, 12, 0, 2*Math.PI);
        ctx.fillStyle = '#fff';
        ctx.fill();
        
        ctx.beginPath();
        ctx.arc(nivelActualConfig.end.x, nivelActualConfig.end.y, nivelActualConfig.end.r, 0, 2*Math.PI);
        ctx.fillStyle = '#ff0';
        ctx.fill();
        
        // Dibuja jugador
        ctx.beginPath();
        ctx.arc(mouse.x, mouse.y, 10, 0, 2*Math.PI);
        ctx.fillStyle = '#0f0';
        ctx.fill();
    }
    
    function checkColision() {
        // Verificar si está en el camino válido
        let enCaminoValido = false;
        
        for(let p of nivelActualConfig.path) {
            if(mouse.x >= p.x && mouse.x <= p.x + p.w && mouse.y >= p.y && mouse.y <= p.y + p.h) {
                enCaminoValido = true;
                break;
            }
        }
        
        // Verificar si toca un muro
        for(let muro of nivelActualConfig.muros) {
            if(mouse.x >= muro.x && mouse.x <= muro.x + muro.w && mouse.y >= muro.y && mouse.y <= muro.y + muro.h) {
                return true; // Colisión con muro
            }
        }
        
        return !enCaminoValido; // Colisión si no está en camino válido
    }
    
    function checkWin() {
        let dx = mouse.x - nivelActualConfig.end.x;
        let dy = mouse.y - nivelActualConfig.end.y;
        return Math.sqrt(dx*dx + dy*dy) < nivelActualConfig.end.r;
    }
    
    function siguienteNivel() {
        nivelActual++;
        if(nivelActual <= totalNiveles) {
            nivelActualConfig = nivelesLaberinto[nivelActual - 1];
            mouse.x = nivelActualConfig.start.x;
            mouse.y = nivelActualConfig.start.y;
            nivelDisplay.textContent = `Nivel ${nivelActual} de ${totalNiveles}`;
            estado.textContent = `¡Nivel ${nivelActual-1} completado! Continúa al siguiente nivel.`;
            setTimeout(() => {
                estado.textContent = 'Mové el mouse desde el círculo blanco hasta el amarillo sin tocar los bordes.';
            }, 1500);
        } else {
            // Juego completado
            gano = true;
            jugando = false;
            estado.textContent = '¡Felicidades! Has completado todos los niveles del laberinto.';
            document.getElementById('btn-continuar-laberinto').style.display = 'inline-block';
        }
    }
    
    canvas.onmousemove = function(e) {
        if(!jugando) return;
        let rect = canvas.getBoundingClientRect();
        mouse.x = e.clientX - rect.left;
        mouse.y = e.clientY - rect.top;
    };
    
    // Loop principal
    function loop() {
        if(!jugando) return;
        draw();
        
        if(checkColision()) {
            jugando = false;
            estado.textContent = '¡Te saliste del camino! Vuelve a intentarlo.';
            setTimeout(() => {
                jugarLaberinto();
            }, 1200);
            return;
        }
        
        if(checkWin()) {
            jugando = false;
            if(nivelActual < totalNiveles) {
                siguienteNivel();
                jugando = true;
            } else {
                siguienteNivel();
            }
        }
        
        requestAnimationFrame(loop);
    }
    
    loop();
}
</script> 