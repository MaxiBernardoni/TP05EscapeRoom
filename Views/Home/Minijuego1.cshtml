@{
    ViewData["Title"] = "Minijuego 1 - Encuentra el emoji diferente";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var modelo = ViewBag.Modelo as TuProyecto.Models.Habitacion3Model;
}

<style>
    .minijuego-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
    }
    .emoji-grid {
        display: grid;
        grid-template-columns: repeat(10, 1fr);
        gap: 10px;
        margin: 20px;
        max-width: 800px;
    }
    .emoji {
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        cursor: pointer;
        border: 2px solid #ddd;
        border-radius: 8px;
        transition: transform 0.2s;
    }
    .emoji:hover {
        transform: scale(1.1);
        border-color: #00eaff;
    }
    .ronda-info {
        font-size: 1.2em;
        margin-bottom: 20px;
        color: #333;
    }
</style>

<div class="minijuego-container" id="minijuego-container">
    <h2>Encuentra el emoji diferente</h2>
    <div id="cronometro" style="font-size:1.5em; color:#00eaff; margin-bottom:10px;"></div>
    <div class="ronda-info">Ronda @modelo.RondaActualEmoji de 10</div>
    @if (modelo.RondaActualEmoji > 10)
    {
        <div style="margin:30px; font-size:1.3em; color:#0c0;">¬°Completaste el minijuego!</div>
        <form method="get" action="/Home/Minijuego2">
            <button type="submit" class="btn btn-success">Ir al minijuego 2</button>
        </form>
    }
    else if (ViewBag.TiempoTerminado == true)
    {
        <div style="margin:30px; font-size:1.3em; color:#c00;">¬°Se acab√≥ el tiempo! Intenta de nuevo.</div>
        <form method="get" action="/Home/Minijuego1">
            <button type="submit" class="btn btn-danger">Reintentar</button>
        </form>
    }
    else
    {
        <div class="emoji-grid">
            @{
                var emojiCorrecto = modelo.EmojiCorrectoActual;
                var emojiBase = "üòÄ";
                var emojiDiferente = "üòÅ";
                for (int i = 0; i < 50; i++)
                {
                    var isEmojiCorrecto = i == emojiCorrecto;
                    <div class="emoji" onclick="seleccionarEmoji(@i)">
                        @(isEmojiCorrecto ? emojiDiferente : emojiBase)
                    </div>
                }
            }
        </div>
    }
</div>

<script>
let tiempoRestante = sessionStorage.getItem('tiempoEmoji') ? parseInt(sessionStorage.getItem('tiempoEmoji')) : 60;
let intervalo = null;
const cronometro = document.getElementById('cronometro');
function actualizarCronometro() {
    let min = Math.floor(tiempoRestante / 60);
    let seg = tiempoRestante % 60;
    cronometro.textContent = `Tiempo restante: ${min}:${seg.toString().padStart(2, '0')}`;
}
function tick() {
    if (tiempoRestante > 0) {
        tiempoRestante--;
        sessionStorage.setItem('tiempoEmoji', tiempoRestante);
        actualizarCronometro();
        if (tiempoRestante === 0) {
            sessionStorage.removeItem('tiempoEmoji');
            window.location.href = '/Home/Minijuego1?tiempoTerminado=1';
        }
    }
}
// Limpiar cualquier intervalo anterior
if (window.intervaloEmoji) clearInterval(window.intervaloEmoji);
window.intervaloEmoji = null;
if (@(modelo.RondaActualEmoji) <= 10 && !(ViewBag.TiempoTerminado == true)) {
    actualizarCronometro();
    window.intervaloEmoji = setInterval(tick, 1000);
}
if (@(modelo.RondaActualEmoji) > 10 || (ViewBag.TiempoTerminado == true)) {
    sessionStorage.removeItem('tiempoEmoji');
    if (window.intervaloEmoji) clearInterval(window.intervaloEmoji);
    window.intervaloEmoji = null;
}
function seleccionarEmoji(indice) {
    var emojiCorrecto = @modelo.EmojiCorrectoActual;
    if (indice === emojiCorrecto) {
        fetch('/Home/ResolverMinijuego1', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `emojiSeleccionado=${indice}`
        }).then(() => window.location.reload());
    }
    // Si selecciona incorrecto, no pasa nada
}
</script> 