@{
    ViewBag.Title = "Minijuego de los Vasos";
    var modelo = ViewBag.Modelo as TuProyecto.Models.Habitacion3Model;
    bool yaEligio = modelo?.VasoSeleccionado >= 0;
}
<style>
.minijuego-vasos-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 60vh;
    gap: 30px;
}
.vasos-row {
    display: flex;
    gap: 60px;
    margin-bottom: 30px;
    position: relative;
}
.vaso-btn {
    background: none;
    border: none;
    cursor: pointer;
    outline: none;
    transition: transform 0.2s;
    position: relative;
}
.vaso-btn.selected {
    transform: scale(1.1);
    box-shadow: 0 0 20px #00ffc3;
}
.vaso-img {
    width: 100px;
    height: 120px;
    transition: filter 0.2s;
}
.pelota-img {
    width: 50px;
    height: 50px;
    position: absolute;
    left: 50%;
    top: 100%;
    transform: translate(-50%, 10px);
    z-index: 2;
    transition: top 0.7s cubic-bezier(.68,-0.55,.27,1.55), left 0.7s cubic-bezier(.68,-0.55,.27,1.55);
}
.gris {
    filter: grayscale(1) brightness(0.6);
    color: #888 !important;
}
@@media (max-width: 600px) {
    .vasos-row { gap: 20px; }
    .vaso-img { width: 60px; height: 70px; }
    .pelota-img { width: 30px; height: 30px; }
}
</style>
<div class="minijuego-vasos-container">
    <h2>¿En qué vaso está la pelota?</h2>
    <form asp-action="ResolverPunga" method="post" id="form-vasos">
        <div class="vasos-row" id="vasos-row">
            @for (int i = 0; i < 3; i++) {
                var selected = modelo?.OrdenVasos != null && modelo.OrdenVasos.Count == 3 && modelo.OrdenVasos[i] == modelo.VasoSeleccionado;
                <button type="submit" name="vasoElegido" value="@i" class="vaso-btn @(selected ? "selected" : "")" @(yaEligio ? "disabled" : "")>
                    <img src="/img/vaso.webp" class="vaso-img" alt="Vaso @(i+1)" />
                </button>
            }
        </div>
        @if (!yaEligio) {
            <div style="margin-top: 20px;" id="msg-instruccion">
                <span>Esperá que se mezclen los vasos...</span>
            </div>
        } else {
            <div style="margin-top: 20px;">
                @if (modelo.VasoSeleccionado == modelo.VasoCorrecto) {
                    <span style="color: #4caf50; font-weight: bold;">¡Acertaste! El punga se va y podés seguir jugando.</span>
                } else {
                    <span style="color: #f44336; font-weight: bold;">Perdiste. El punga te robó todo y tenés que reiniciar la sala.</span>
                }
            </div>
            <div style="margin-top: 20px;">
                @if (modelo.VasoSeleccionado == modelo.VasoCorrecto) {
                    <a href="/Home/Habitacion3" class="btn btn-primary">Continuar</a>
                } else {
                    <a href="/" class="btn btn-primary">Volver a empezar</a>
                }
            </div>
        }
    </form>
</div>
@if (!yaEligio) {
<script>
    // Parámetros de animación
    const vasoCorrecto = @modelo.VasoCorrecto;
    const vasosRow = document.getElementById('vasos-row');
    const formVasos = document.getElementById('form-vasos');
    const botones = vasosRow.querySelectorAll('.vaso-btn');
    let pelota = null;
    // --- NUEVO: Mantener el orden real de los vasos ---
    let orden = [0,1,2];
    // Elimino la animación de la pelotita, solo mezclo los vasos directamente
    function animarPelotaSoloEnMedio(callback) {
        if (callback) callback();
    }
    // Mezclar los vasos
    function mezclarVasos(callback) {
        let pasos = 8;
        let duracion = 2000;
        let intervalo = duracion / pasos;
        let paso = 0;
        function swapAnim(a, b) {
            const btnA = botones[a];
            const btnB = botones[b];
            btnA.style.transition = btnB.style.transition = 'transform 0.18s';
            btnA.style.transform = `translateX(${(b-a)*120}px)`;
            btnB.style.transform = `translateX(${(a-b)*120}px)`;
            setTimeout(() => {
                btnA.style.transition = btnB.style.transition = '';
                btnA.style.transform = btnB.style.transform = '';
                vasosRow.insertBefore(btnB, btnA);
                // --- NUEVO: Actualizar el array de orden ---
                let temp = orden[a];
                orden[a] = orden[b];
                orden[b] = temp;
            }, 180);
        }
        function mezclarPaso() {
            if (paso >= pasos) {
                if (callback) callback();
                return;
            }
            // Elegir dos vasos al azar para intercambiar
            let a = Math.floor(Math.random()*3);
            let b;
            do { b = Math.floor(Math.random()*3); } while (b === a);
            swapAnim(a, b);
            paso++;
            setTimeout(mezclarPaso, intervalo);
        }
        mezclarPaso();
    }
    // Deshabilitar botones al inicio
    botones.forEach(btn => btn.disabled = true);
    animarPelotaSoloEnMedio(() => {
        mezclarVasos(() => {
            document.getElementById('msg-instruccion').innerHTML = '<span>Elegí un vaso para ver si acertás.</span>';
            botones.forEach(btn => btn.disabled = false);
        });
    });
    // --- NUEVO: Interceptar el submit y enviar el índice real ---
    botones.forEach((btn, visualIdx) => {
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            // Buscar el índice lógico del vaso elegido
            let vasoElegido = orden[visualIdx];
            // Crear input oculto y enviar el formulario
            let input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'vasoElegido';
            input.value = vasoElegido;
            formVasos.appendChild(input);
            // --- NUEVO: enviar el orden de los vasos ---
            let inputOrden = document.createElement('input');
            inputOrden.type = 'hidden';
            inputOrden.name = 'ordenVasos';
            inputOrden.value = JSON.stringify(orden);
            formVasos.appendChild(inputOrden);
            formVasos.submit();
        });
    });
</script>
} 