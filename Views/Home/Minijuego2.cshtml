@{
    ViewData["Title"] = "Minijuego 2 - Juego de Memoria";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var modelo = ViewBag.Modelo as TuProyecto.Models.Habitacion3Model;
}

<style>
    .minijuego-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
    }
    .memoria-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 10px;
        margin: 20px;
        max-width: 700px;
    }
    .cuadrado {
        width: 80px;
        height: 80px;
        background: #00eaff;
        border: 2px solid #0099cc;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s;
    }
    .cuadrado.blanco {
        background: white;
    }
    .cuadrado.seleccionado {
        background: #ffeb3b;
        border-color: #ffc107;
    }
    .ronda-info {
        font-size: 1.2em;
        margin-bottom: 20px;
        color: #333;
    }
    .controles {
        margin-top: 20px;
    }
    .btn-verificar {
        padding: 10px 20px;
        font-size: 1.1em;
        background: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        display: none;
    }
    .btn-verificar:hover {
        background: #45a049;
    }
    .instrucciones {
        margin: 20px;
        padding: 15px;
        background: #003344;
        border-radius: 8px;
        max-width: 600px;
        text-align: center;
        color: #fff;
        font-family: 'Courier New', monospace;
        font-size: 1.1em;
        box-shadow: 0 2px 10px #0008;
    }
</style>

<div class="minijuego-container">
    <h2>Juego de Memoria</h2>
    <div class="ronda-info">Ronda @modelo.RondaActualMemoria de 7</div>
    
    @if (modelo.RondaActualMemoria > 7)
    {
        <div style="margin:30px; font-size:1.3em; color:#0c0;">¡Completaste el minijuego!</div>
        <form method="post" action="/Home/AvanzarCuadra">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-success">Continuar</button>
        </form>
    }
    else
    {
        <div class="instrucciones">
            Memoriza los cuadrados que se iluminarán en blanco.
            Cuando desaparezcan, selecciona los mismos cuadrados y presiona verificar.
        </div>
        <div class="memoria-grid">
            @for (int i = 0; i < 49; i++)
            {
                <div class="cuadrado" data-index="@i" onclick="toggleCuadrado(this)"></div>
            }
        </div>
        <div class="controles">
            <button class="btn-verificar" onclick="verificarSecuencia()">Verificar</button>
        </div>
    }
</div>

<script>
    let secuenciaSeleccionada = [];
    let secuenciaOriginal = @Html.Raw(Json.Serialize(modelo.SecuenciaMemoria));
    let mostrandoSecuencia = true;
    
    function mostrarSecuenciaInicial() {
        secuenciaOriginal.forEach(index => {
            document.querySelector(`[data-index="${index}"]`).classList.add('blanco');
        });

        setTimeout(() => {
            document.querySelectorAll('.cuadrado').forEach(cuadrado => {
                cuadrado.classList.remove('blanco');
            });
            mostrandoSecuencia = false;
            document.querySelector('.btn-verificar').style.display = 'block';
        }, 1000);
    }

    function toggleCuadrado(elemento) {
        if (mostrandoSecuencia) return;
        
        const index = parseInt(elemento.dataset.index);
        const indexEnSecuencia = secuenciaSeleccionada.indexOf(index);
        
        if (indexEnSecuencia === -1) {
            if (secuenciaSeleccionada.length < secuenciaOriginal.length) {
                secuenciaSeleccionada.push(index);
                elemento.classList.add('seleccionado');
            }
        } else {
            secuenciaSeleccionada.splice(indexEnSecuencia, 1);
            elemento.classList.remove('seleccionado');
        }
    }

    function verificarSecuencia() {
        fetch('/Home/ResolverMinijuego2', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `secuencia=${secuenciaSeleccionada.join(',')}`
        }).then(() => window.location.reload());
    }

    mostrarSecuenciaInicial();
</script> 