@{
    ViewData["Title"] = "HabitaciÃ³n 1";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var modelo = ViewBag.Modelo as TuProyecto.Models.Habitacion1Model;
    int totalSeconds = ViewBag.GameSeconds ?? 0;
    var seleccionados = modelo?.ObjetosSeleccionados ?? new List<string>();
    var objetos = modelo?.ObjetosDisponibles ?? new List<string>();
}

<style>
    .room-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
        padding: 40px;
        max-width: 800px;
        margin: auto;
    }

    .item {
        background-color: #1e1e1e;
        color: white;
        font-size: 18px;
        padding: 40px;
        text-align: center;
        border-radius: 15px;
        cursor: pointer;
        transition: transform 0.2s, background-color 0.2s;
        user-select: none;
    }

    .item:hover {
        transform: scale(1.05);
        background-color: #333;
    }

    .item.selected {
        background-color: #4caf50 !important;
    }

    .item.disabled {
        background-color: #444 !important;
        opacity: 0.5;
        cursor: not-allowed;
    }

    #global-timer {
        position: fixed;
        top: 10px;
        left: 10px;
        font-size: 20px;
        font-family: 'Courier New', monospace;
        color: #ff3c3c;
        z-index: 9999;
        background: black;
        padding: 5px 10px;
        border-radius: 5px;
    }
</style>

<div id="global-timer"></div>

<div class="room-grid">
@for (int i = 0; i < 9; i++) {
    if (i == 6) {
        <form asp-action="VerificarPuerta" method="post">
            <button type="submit" class="item @(modelo.PuedeSalir() ? "" : "disabled")">ðŸšª Puerta</button>
        </form>
    } else {
        var obj = objetos[i < 6 ? i : i - 1];
        <form asp-action="SeleccionarObjeto" method="post">
            <input type="hidden" name="objeto" value="@obj" />
            <button type="submit" class="item @(seleccionados.Contains(obj) ? "selected" : "")">@obj</button>
        </form>
    }
}
</div>

<script>
    let totalSeconds = @totalSeconds;

    function iniciarReloj() {
        const global = document.getElementById("global-timer");

        function actualizar() {
            totalSeconds++;
            const totalMin = 60 * 8 + Math.floor(totalSeconds / 60);
            const horas = Math.floor(totalMin / 60).toString().padStart(2, '0');
            const mins = (totalMin % 60).toString().padStart(2, '0');
            const segs = (totalSeconds % 60).toString().padStart(2, '0');

            global.innerText = `${horas}:${mins}:${segs}`;

            fetch(`/home/updateclock?seconds=${totalSeconds}`);
        }

        actualizar();
        setInterval(actualizar, 1000);
    }

    iniciarReloj();
</script>

